generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id               String    @id @default(cuid())
  name             String?
  email            String?   @unique
  emailVerified    DateTime?
  image            String?
  completedMinutes Int?      @default(0)
  customImage      String?
  customName       String?
  accounts         Account[]
  sessions         Session[]
  tasks            Task[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Task {
  id                Int       @id @default(autoincrement())
  userId            String
  title             String
  detail            String?
  category          String?
  isOnGoing         Boolean   @default(false)
  isCompleted       Boolean   @default(false)
  imageData         String?
  isPublished       Boolean   @default(false)
  publishedTitle    String?
  publishedStrategy String?
  totalMinutes      Int?
  remainingMinutes  Int?
  subTasks          SubTask[]
  user              User      @relation(fields: [userId], references: [id])
}

model SubTask {
  id               Int     @id @default(autoincrement())
  taskId           Int
  title            String
  detail           String?
  isCompleted      Boolean @default(false)
  estimatedMinutes Int
  task             Task    @relation(fields: [taskId], references: [id])
}
